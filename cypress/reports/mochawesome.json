{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2022-07-05T11:31:37.490Z",
    "end": "2022-07-05T11:33:14.175Z",
    "duration": 96685,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96c10dd7-5d95-48b4-b7eb-9a46ed7b11e2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5aeb9f67-f8a2-40e1-8ca2-a61842863a5c",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "09670858-c2fa-4e3e-ae38-4caa1106be2e",
              "parentUUID": "5aeb9f67-f8a2-40e1-8ca2-a61842863a5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09670858-c2fa-4e3e-ae38-4caa1106be2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "cd8bba02-1928-480f-9df3-f00a16d06286",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "bb8a4a76-0e08-45f2-bbf2-f76613b730e5",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "fee599dd-90c2-4c48-9393-1feefe54c643",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0037d22d-6627-417f-849b-f282e61e8c5b",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "fda468cd-b418-4ebd-9072-d2562c0818df",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "13ca50c0-0e24-4a71-9a20-a26fd3eceb47",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "8d8b58e7-5bf4-4135-9d27-b93143162050",
              "parentUUID": "d56c3d9d-2602-4454-bb0d-a2450a6ec735",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd8bba02-1928-480f-9df3-f00a16d06286",
            "bb8a4a76-0e08-45f2-bbf2-f76613b730e5",
            "fee599dd-90c2-4c48-9393-1feefe54c643",
            "0037d22d-6627-417f-849b-f282e61e8c5b",
            "fda468cd-b418-4ebd-9072-d2562c0818df",
            "13ca50c0-0e24-4a71-9a20-a26fd3eceb47",
            "8d8b58e7-5bf4-4135-9d27-b93143162050"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56ec179d-8a82-4ed0-af6c-78ca6ac387b0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2741738e-b06e-4fad-b38a-afc745eb0bd8",
              "parentUUID": "56ec179d-8a82-4ed0-af6c-78ca6ac387b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "e2d3c57d-e2c9-49de-8f98-858397f63319",
              "parentUUID": "56ec179d-8a82-4ed0-af6c-78ca6ac387b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2741738e-b06e-4fad-b38a-afc745eb0bd8",
            "e2d3c57d-e2c9-49de-8f98-858397f63319"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a921e359-77d3-4805-9e63-0d901385dfc8",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "35abf3be-6a4e-430a-a498-e062e01220b4",
              "parentUUID": "a921e359-77d3-4805-9e63-0d901385dfc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "56d35aa2-458a-46d4-8ce4-51d2a67802f2",
              "parentUUID": "a921e359-77d3-4805-9e63-0d901385dfc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "a792b85f-d911-4aa2-ba5f-125405b9021c",
              "parentUUID": "a921e359-77d3-4805-9e63-0d901385dfc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6abb43c4-02aa-4ce4-9ed4-b8d72a5eeb39",
              "parentUUID": "a921e359-77d3-4805-9e63-0d901385dfc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35abf3be-6a4e-430a-a498-e062e01220b4",
            "56d35aa2-458a-46d4-8ce4-51d2a67802f2",
            "a792b85f-d911-4aa2-ba5f-125405b9021c",
            "6abb43c4-02aa-4ce4-9ed4-b8d72a5eeb39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1280,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d2c514d-caf4-443f-bebe-40d90770e650",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "87a85f76-925f-41ba-9684-d5223faa0eb6",
              "parentUUID": "0d2c514d-caf4-443f-bebe-40d90770e650",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2d06dff3-262e-4373-9d3c-c4d39357417c",
              "parentUUID": "0d2c514d-caf4-443f-bebe-40d90770e650",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87a85f76-925f-41ba-9684-d5223faa0eb6",
            "2d06dff3-262e-4373-9d3c-c4d39357417c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ab448ed7-eba9-4d1d-8b6f-4b54d5f5bffd",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7cb9c9ef-5b54-408b-be7a-3ed66b78a1dc",
              "parentUUID": "ab448ed7-eba9-4d1d-8b6f-4b54d5f5bffd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d0232dd2-31b7-4cdc-967f-c1b674d3fa5c",
              "parentUUID": "ab448ed7-eba9-4d1d-8b6f-4b54d5f5bffd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cb9c9ef-5b54-408b-be7a-3ed66b78a1dc",
            "d0232dd2-31b7-4cdc-967f-c1b674d3fa5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "312c2de2-91d5-4673-901e-d17f583d3cc3",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 752,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b099ad71-77e7-4902-9628-005175d0a731",
              "parentUUID": "312c2de2-91d5-4673-901e-d17f583d3cc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "41a8849b-6925-4aaa-b5a8-574ef6cc1f57",
              "parentUUID": "312c2de2-91d5-4673-901e-d17f583d3cc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b099ad71-77e7-4902-9628-005175d0a731",
            "41a8849b-6925-4aaa-b5a8-574ef6cc1f57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10448,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3bf054b-275c-4a69-8269-70ff0d376ec6",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "bb715f95-9f05-45fe-932c-04edb785a67c",
              "parentUUID": "e3bf054b-275c-4a69-8269-70ff0d376ec6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0be61b90-7171-4078-a932-379f62f1e45c",
              "parentUUID": "e3bf054b-275c-4a69-8269-70ff0d376ec6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b311079a-3a9b-4a0a-91fc-1ec1b0f2eb87",
              "parentUUID": "e3bf054b-275c-4a69-8269-70ff0d376ec6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb715f95-9f05-45fe-932c-04edb785a67c",
            "0be61b90-7171-4078-a932-379f62f1e45c",
            "b311079a-3a9b-4a0a-91fc-1ec1b0f2eb87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "531a7de2-5489-4a8b-a29b-a3dad4d10832",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ac6e02ca-6881-4207-8905-89caf12b69be",
              "parentUUID": "531a7de2-5489-4a8b-a29b-a3dad4d10832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "86a8a85f-d0a7-42d5-93f3-ef153693fa3c",
              "parentUUID": "531a7de2-5489-4a8b-a29b-a3dad4d10832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e6488396-ac6b-47aa-90f8-61ee064abf96",
              "parentUUID": "531a7de2-5489-4a8b-a29b-a3dad4d10832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "b2da929b-822f-40b8-befc-14f1802ca46f",
              "parentUUID": "531a7de2-5489-4a8b-a29b-a3dad4d10832",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac6e02ca-6881-4207-8905-89caf12b69be",
            "86a8a85f-d0a7-42d5-93f3-ef153693fa3c",
            "e6488396-ac6b-47aa-90f8-61ee064abf96",
            "b2da929b-822f-40b8-befc-14f1802ca46f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52729ac9-7004-4902-87f2-5cb9be129c4a",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9ff6aac5-1907-4d74-b9d6-7500fb0ab95c",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4726,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fa697f3a-955f-4c86-896b-f54bb11038c2",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4791,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9e5c5992-1479-4209-84ba-41fb38cf44a4",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4702,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c0d264b-9ac4-43b7-a27c-dcd8cf231ca1",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4752,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bdc5f4f0-f091-4ec7-95ec-73fb88ada67a",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "172baae4-8a27-4da6-87e0-fd36c20b1716",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4781,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc364643-96c7-440e-9703-62dde33df76b",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4736,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "757e7ff3-e5ed-41a4-8de6-ea98e67adf28",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d34e4b8-7676-4a6b-b53c-8a0e5da78024",
              "parentUUID": "52729ac9-7004-4902-87f2-5cb9be129c4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9ff6aac5-1907-4d74-b9d6-7500fb0ab95c",
            "fa697f3a-955f-4c86-896b-f54bb11038c2",
            "9e5c5992-1479-4209-84ba-41fb38cf44a4",
            "7c0d264b-9ac4-43b7-a27c-dcd8cf231ca1",
            "bdc5f4f0-f091-4ec7-95ec-73fb88ada67a",
            "172baae4-8a27-4da6-87e0-fd36c20b1716",
            "dc364643-96c7-440e-9703-62dde33df76b",
            "757e7ff3-e5ed-41a4-8de6-ea98e67adf28",
            "3d34e4b8-7676-4a6b-b53c-8a0e5da78024"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42610,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b83db04-b272-4ebf-92eb-7a1a8631763a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4935,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "538faf42-4c8c-465a-91bc-8a95cbb3fc03",
              "parentUUID": "6b83db04-b272-4ebf-92eb-7a1a8631763a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4885,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0793071-3792-4a03-b4a7-55e386b58263",
              "parentUUID": "6b83db04-b272-4ebf-92eb-7a1a8631763a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4955,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38701/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38701/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38701/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38701/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38701/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38701/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38701/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38701/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38701/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38701/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38701/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac516f28-ab53-4a76-aed5-63a82e59a82d",
              "parentUUID": "6b83db04-b272-4ebf-92eb-7a1a8631763a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "538faf42-4c8c-465a-91bc-8a95cbb3fc03",
            "a0793071-3792-4a03-b4a7-55e386b58263",
            "ac516f28-ab53-4a76-aed5-63a82e59a82d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2725487b-8a33-4347-9fde-817ef6e1f131",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "82dadfde-dbce-445e-a217-5d7206a3e26c",
              "parentUUID": "2725487b-8a33-4347-9fde-817ef6e1f131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "b3a6a1a3-e9f7-46b5-ad22-20f4f7b0a68d",
              "parentUUID": "2725487b-8a33-4347-9fde-817ef6e1f131",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82dadfde-dbce-445e-a217-5d7206a3e26c",
            "b3a6a1a3-e9f7-46b5-ad22-20f4f7b0a68d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1837,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}